openapi: 3.0.0
info:
  description: vmrest 1.3.1
  termsOfService: http://swagger.io/terms/
  title: VMware Fusion REST API
  version: 1.3.1
servers:
- url: /api
tags:
- name: VM Management
- name: VM Power Management
- name: VM Shared Folders Management
- name: VM Network Adapters Management
- name: Host Networks Management
paths:
  /vms:
    get:
      operationId: getAllVMs
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                items:
                  $ref: "#/components/schemas/VMID"
                type: array
          description: All VMs' ID and path
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns a list of VM IDs and paths for all VMs
      tags:
      - VM Management
    post:
      operationId: createVM
      parameters:
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMCloneParameter"
        description: Parameters of VM to create
        required: true
      responses:
        "201":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
          description: VM information
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Creates a copy of the VM
      tags:
      - VM Management
  /vms/{id}:
    delete:
      operationId: deleteVM
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "204":
          description: VM deleted
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Deletes a VM
      tags:
      - VM Management
    get:
      operationId: getVM
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
          description: VM information
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns the VM setting information of a VM
      tags:
      - VM Management
    put:
      operationId: updateVM
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMParameter"
        description: VM definition
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
          description: VM information
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Updates the VM settings
      tags:
      - VM Management
  /vms/{id}/restrictions:
    get:
      operationId: getVMRestrictions
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMRestrictionsInformation"
          description: VM restrictions information
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns the restrictions information of the VM
      tags:
      - VM Management
  /vms/registration:
    post:
      operationId: registerVM
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMRegisterParameter"
        description: Parameters of the VM to register
        required: true
      responses:
        "201":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMRrgistrationInformation"
          description: VM registration information
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Register VM to VM Library
      tags:
      - VM Management
  /vms/{id}/params/{name}:
    get:
      operationId: getVMParams
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the param
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ConfigVMParamsParameter"
          description: VM config parameter
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Get the VM config params
      tags:
      - VM Management
  /vms/{id}/params:
    put:
      operationId: configVMParams
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/ConfigVMParamsParameter"
        description: Parameters set to the VM
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: VM config params updated
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: update the vm config params
      tags:
      - VM Management
  /vms/{id}/power:
    get:
      operationId: getPowerState
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password for encrypted VM. If VM is already powered on password
          is not needed.
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMPowerState"
          description: VM power state
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns the power state of the VM
      tags:
      - VM Power Management
    put:
      operationId: changePowerState
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password for encrypted VM. If VM is already powered on password
          is not needed.
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMPowerOperation"
        description: "VM power operation: on, off, shutdown, suspend, pause, unpause"
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMPowerState"
          description: VM power state
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Changes the VM power state
      tags:
      - VM Power Management
  /vms/{id}/sharedfolders:
    get:
      operationId: getAllSharedFolders
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
          description: Shared folders mounted in the VM
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns all shared folders mounted in the VM
      tags:
      - VM Shared Folders Management
    post:
      operationId: createSharedFolder
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/SharedFolder"
        description: Parameters of the shared folder to mount
        required: true
      responses:
        "201":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
          description: Shared folders mounted in the VM
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Mounts a new shared folder in the VM
      tags:
      - VM Shared Folders Management
  /vms/{id}/sharedfolders/{folder id}:
    delete:
      operationId: deleteSharedFolder
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of shared folder
        explode: false
        in: path
        name: folder id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "204":
          description: Shared folder deleted
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Deletes a shared folder
      tags:
      - VM Shared Folders Management
    put:
      operationId: updataSharedFolder
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of VM shared folder
        explode: false
        in: path
        name: folder id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/SharedFolderParameter"
        description: Parameters of the shared folder to update to
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
          description: Shared folders mounted in the VM
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Updates a shared folder mounted in the VM
      tags:
      - VM Shared Folders Management
  /vms/{id}/nic:
    get:
      operationId: getAllNICDevices
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevices"
          description: Network adapters in the VM
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns all network adapters in the VM
      tags:
      - VM Network Adapters Management
    post:
      operationId: createNICDevice
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/NICDeviceParameter"
        description: Parameters of network adapter to create
        required: true
      responses:
        "201":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevice"
          description: Information of the network adapter created
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Creates a network adapter in the VM
      tags:
      - VM Network Adapters Management
  /vms/{id}/nic/{index}:
    delete:
      operationId: deleteNICDevice
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Index of VM network adapter
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "204":
          description: Network adapter deleted
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Deletes a VM network adapter
      tags:
      - VM Network Adapters Management
    put:
      operationId: updateNICDevice
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Index of VM network adapter
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/NICDeviceParameter"
        description: Parameters of network adapter to update to
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevice"
          description: Information of the network adapter updated to
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Updates a network adapter in the VM
      tags:
      - VM Network Adapters Management
  /vms/{id}/ip:
    get:
      operationId: getIPAddress
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/getIPAddress_200_response"
          description: VM IP address
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns the IP address of a VM
      tags:
      - VM Network Adapters Management
  /vms/{id}/nicips:
    get:
      operationId: getNicInfo
      parameters:
      - description: ID of VM
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: VM password
        explode: true
        in: query
        name: vmPassword
        required: false
        schema:
          format: password
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NicIpStackAll"
          description: VM NICs IP stack configuration
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns the IP stack configuration of all NICs of a VM
      tags:
      - VM Network Adapters Management
  /vmnets:
    post:
      operationId: createNetwork
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/CreateVmnetParameter"
        description: Host network to be created
        required: true
      responses:
        "201":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Network"
          description: Virtual network
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Creates a virtual network
      tags:
      - Host Networks Management
  /vmnet:
    get:
      operationId: getAllNetworks
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Networks"
          description: All virtual networks
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns all virtual networks
      tags:
      - Host Networks Management
  /vmnet/{vmnet}/portforward:
    get:
      operationId: getPortforwards
      parameters:
      - description: NAT type of virtual network
        explode: false
        in: path
        name: vmnet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Portforwards"
          description: All port forwardings
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns all port forwardings
      tags:
      - Host Networks Management
  /vmnet/{vmnet}/mactoip:
    get:
      operationId: getMACToIPs
      parameters:
      - description: Virtual network that has DHCP enabled
        explode: false
        in: path
        name: vmnet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/MACToIPs"
          description: All mac to ip settings
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Returns all MAC-to-IP settings for DHCP service
      tags:
      - Host Networks Management
  /vmnet/{vmnet}/mactoip/{mac}:
    put:
      operationId: updateMacToIP
      parameters:
      - description: Virtual network that enabled DHCP
        explode: false
        in: path
        name: vmnet
        required: true
        schema:
          type: string
        style: simple
      - description: Mac address that want to be mapped with a given IP
        explode: false
        in: path
        name: mac
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/MacToIPParameter"
        description: "IP that will be assigned to given Mac address. If empty IP,\
          \ the original Mac to IP binding will be deleted"
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Mac to IP mapping updated
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "409":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Resource state conflicts
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Updates the MAC-to-IP binding
      tags:
      - Host Networks Management
  /vmnet/{vmnet}/portforward/{protocol}/{port}:
    delete:
      operationId: deletePortforward
      parameters:
      - description: NAT type of virtual network
        explode: false
        in: path
        name: vmnet
        required: true
        schema:
          type: string
        style: simple
      - description: "Protocol type: tcp, udp"
        explode: false
        in: path
        name: protocol
        required: true
        schema:
          type: string
        style: simple
      - description: Host port number
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int16
          type: integer
        style: simple
      responses:
        "204":
          description: Port forwarding deleted
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Deletes port forwarding
      tags:
      - Host Networks Management
    put:
      operationId: updatePortforward
      parameters:
      - description: NAT type of virtual network
        explode: false
        in: path
        name: vmnet
        required: true
        schema:
          type: string
        style: simple
      - description: "Protocol type: tcp, udp"
        explode: false
        in: path
        name: protocol
        required: true
        schema:
          type: string
        style: simple
      - description: Host port number
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int16
          type: integer
        style: simple
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/PortforwardParameter"
        description: Guest to forward to
        required: true
      responses:
        "200":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Port forwarding updated
        "400":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Invalid parameters
        "401":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Authentication failed
        "403":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Permission denied
        "404":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such resource
        "406":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Content type was not supported
        "500":
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Server error
        default:
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unexpected error
      summary: Updates port forwarding
      tags:
      - Host Networks Management
components:
  schemas:
    VMParameter:
      properties:
        processors:
          default: 1
          description: Number of processor cores
          format: int32
          readOnly: true
          type: integer
        memory:
          default: 512
          description: Memory size in mega bytes
          format: int32
          readOnly: true
          type: integer
      type: object
    VMInformation:
      properties:
        id:
          type: string
        cpu:
          $ref: "#/components/schemas/VMCPU"
        memory:
          default: 512
          description: Memory size in mega bytes
          format: int32
          readOnly: true
          type: integer
      required:
      - id
      type: object
    VMRestrictionsInformation:
      properties:
        id:
          type: string
        managedOrg:
          description: The organization manages the VM
          type: string
        integrityconstraint:
          enum:
          - "true"
          - "false"
          type: string
        cpu:
          $ref: "#/components/schemas/VMCPU"
        memory:
          default: 512
          description: Memory size in mega bytes
          format: int32
          readOnly: true
          type: integer
        applianceView:
          $ref: "#/components/schemas/VMApplianceView"
        cddvdList:
          $ref: "#/components/schemas/VMConnectedDeviceList"
        floopyList:
          $ref: "#/components/schemas/VMConnectedDeviceList"
        firewareType:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        guestIsolation:
          $ref: "#/components/schemas/VMGuestIsolation"
        niclist:
          $ref: "#/components/schemas/NICDevices"
        parallelPortList:
          $ref: "#/components/schemas/VMConnectedDeviceList"
        serialPortList:
          $ref: "#/components/schemas/VMConnectedDeviceList"
        usbList:
          $ref: "#/components/schemas/VMUsbList"
        remoteVNC:
          $ref: "#/components/schemas/VMRemoteVNC"
      required:
      - id
      type: object
    VMApplianceView:
      properties:
        author:
          type: string
        version:
          type: string
        port:
          default: 0
          description: port of communication
          format: int16
          readOnly: true
          type: integer
        showAtPowerOn:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    VMConnectedDevice:
      properties:
        index:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        startConnected:
          enum:
          - "true"
          - "false"
          type: string
        connectionStatus:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        devicePath:
          type: string
      type: object
    VMConnectedDeviceList:
      properties:
        num:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        devices:
          items:
            $ref: "#/components/schemas/VMConnectedDevice"
          type: array
      type: object
    VMGuestIsolation:
      properties:
        copyDisabled:
          enum:
          - "true"
          - "false"
          type: string
        dndDisabled:
          enum:
          - "true"
          - "false"
          type: string
        hgfsDisabled:
          enum:
          - "true"
          - "false"
          type: string
        pasteDisabled:
          enum:
          - "true"
          - "false"
          type: string
      type: object
    VMUsbDevice:
      properties:
        index:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        connected:
          enum:
          - "true"
          - "false"
          type: string
        backingInfo:
          type: string
        BackingType:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
      type: object
    VMUsbList:
      properties:
        num:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        usbDevices:
          items:
            $ref: "#/components/schemas/VMUsbDevice"
          type: array
      type: object
    VMRemoteVNC:
      properties:
        VNCEnabled:
          enum:
          - "true"
          - "false"
          type: string
        VNCPort:
          default: 0
          description: port of communication
          format: int16
          readOnly: true
          type: integer
      type: object
    VMRegisterParameter:
      properties:
        name:
          description: Register VM name
          type: string
        path:
          description: Register VM path
          type: string
      type: object
    VMRrgistrationInformation:
      properties:
        id:
          description: Registered VM name id
          type: string
        path:
          description: Registered VM path
          type: string
      type: object
    ConfigVMParamsParameter:
      properties:
        name:
          description: config params name
          type: string
        value:
          description: config params value
          type: string
      type: object
    VMCloneParameter:
      properties:
        name:
          description: New VM name
          type: string
        parentId:
          description: Existing VM ID to clone.
          type: string
      required:
      - name
      - parentId
      type: object
    VMID:
      properties:
        id:
          description: ID of the VM
          type: string
        path:
          description: Path of the VM
          type: string
      required:
      - id
      - path
    VMPowerState:
      properties:
        power_state:
          enum:
          - poweredOn
          - poweredOff
          - paused
          - suspended
          type: string
      required:
      - power_state
      type: object
    VMCPU:
      description: The CPU information of VM
      properties:
        processors:
          default: 1
          description: Number of processor cores
          format: int32
          readOnly: true
          type: integer
      readOnly: true
      type: object
    VMProcessors:
      default: 1
      description: Number of processor cores
      format: int32
      readOnly: true
      type: integer
    VMMemory:
      default: 512
      description: Memory size in mega bytes
      format: int32
      readOnly: true
      type: integer
    VMPowerOperation:
      enum:
      - "on"
      - "off"
      - shutdown
      - suspend
      - pause
      - unpause
      type: string
    SharedFolder:
      properties:
        folder_id:
          description: ID of folder which be mounted to the host
          type: string
        host_path:
          description: Path of the host shared folder
          type: string
        flags:
          description: |
            The flags property specifies how the folder will be accessed by the VM.
            There is only one flag supported which is "4" and means read/write access.
          type: integer
      required:
      - flags
      - folder_id
      - host_path
    SharedFolders:
      description: The shared folders mounted to this VM
      items:
        $ref: "#/components/schemas/SharedFolder"
      type: array
    SharedFolderParameter:
      properties:
        host_path:
          description: Path of the host shared folder
          type: string
        flags:
          description: |
            The flags property specifies how the folder will be accessed by the VM.
            There is only one flag supported which is "4" and means read/write access.
          type: integer
      required:
      - flags
      - host_path
    NICDevice:
      properties:
        index:
          default: 1
          description: Index of Network Adapters
          format: int32
          readOnly: true
          type: integer
        type:
          description: The network type of network adapter
          enum:
          - bridged
          - nat
          - hostonly
          - custom
          type: string
        vmnet:
          description: The vmnet name
          type: string
        macAddress:
          description: Mac address
          type: string
      required:
      - index
      - macAddress
      - type
      - vmnet
    NICDevices:
      description: The list of network adapters
      properties:
        num:
          default: 1
          description: Number of NIC devices
          format: int32
          readOnly: true
          type: integer
        nics:
          description: The network adapter added to this VM
          items:
            $ref: "#/components/schemas/NICDevice"
          type: array
      required:
      - nics
      - num
      type: object
    NICDeviceParameter:
      properties:
        type:
          description: The network type of network adapter
          enum:
          - custom
          - bridged
          - nat
          - hostonly
          type: string
        vmnet:
          description: "The vmnet name, it should only be used while type is custom"
          type: string
      required:
      - type
      - vmnet
    CreateVmnetParameter:
      properties:
        name:
          description: The host network name
          type: string
        type:
          description: The host network type
          enum:
          - nat
          - hostOnly
          type: string
      required:
      - name
    Network:
      description: The virtual network
      properties:
        name:
          description: Name of virtual network
          type: string
        type:
          enum:
          - bridged
          - nat
          - hostOnly
          type: string
        dhcp:
          enum:
          - "true"
          - "false"
          type: string
        subnet:
          type: string
        mask:
          type: string
      required:
      - dhcp
      - mask
      - name
      - subnet
      - type
    Networks:
      description: The list of virtual networks
      properties:
        num:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        vmnets:
          description: The list of virtual networks
          items:
            $ref: "#/components/schemas/Network"
          type: array
      required:
      - num
      - vmnets
      type: object
    MACToIP:
      description: The MAC to IP setting
      properties:
        vmnet:
          type: string
        mac:
          type: string
        ip:
          type: string
      required:
      - ip
      - mac
      - vmnet
    MACToIPs:
      description: The list of MAC to IP settings
      properties:
        num:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        mactoips:
          description: The list of MAC to IP settings
          items:
            $ref: "#/components/schemas/MACToIP"
          type: array
      required:
      - mactoip
      - num
      type: object
    Portforward:
      description: The port forwarding
      properties:
        port:
          default: 0
          description: port of communication
          format: int16
          readOnly: true
          type: integer
        protocol:
          enum:
          - tcp
          - udp
          type: string
        desc:
          type: string
        guest:
          $ref: "#/components/schemas/Portforward_guest"
      required:
      - desc
      - guest
      - port
      - protocol
    Portforwards:
      description: The list of port forwarding
      properties:
        num:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        port_forwardings:
          description: The list of port forwardings
          items:
            $ref: "#/components/schemas/Portforward"
          type: array
      required:
      - num
      - port_forwardings
      type: object
    PortforwardParameter:
      properties:
        guestIp:
          type: string
        guestPort:
          default: 0
          description: port of communication
          format: int16
          readOnly: true
          type: integer
        desc:
          type: string
      required:
      - guestIp
      - guestPort
    NicIpStack:
      description: Information about a NIC
      properties:
        mac:
          description: "Mac address, E.g., de:ad:be:ef:12:34"
          type: string
        ip:
          description: IP address(es) of the interface (CIDR)
          items:
            $ref: "#/components/schemas/IPNetAddress"
          type: array
        dns:
          $ref: "#/components/schemas/DnsConfig"
        wins:
          $ref: "#/components/schemas/WinsConfig"
        dhcp4:
          $ref: "#/components/schemas/DhcpConfig"
        dhcp6:
          $ref: "#/components/schemas/DhcpConfig"
      required:
      - mac
      type: object
    NicIpStackAll:
      description: Information about all NICs
      properties:
        nics:
          items:
            $ref: "#/components/schemas/NicIpStack"
          type: array
        routes:
          items:
            $ref: "#/components/schemas/RouteEntry"
          type: array
        dns:
          $ref: "#/components/schemas/DnsConfig"
        wins:
          $ref: "#/components/schemas/WinsConfig"
        dhcpv4:
          $ref: "#/components/schemas/DhcpConfig"
        dhcpv6:
          $ref: "#/components/schemas/DhcpConfig"
      type: object
    Number:
      default: 0
      description: Number of items
      format: int32
      readOnly: true
      type: integer
    NICNumber:
      default: 1
      description: Number of NIC devices
      format: int32
      readOnly: true
      type: integer
    NICIndex:
      default: 1
      description: Index of Network Adapters
      format: int32
      readOnly: true
      type: integer
    Port:
      default: 0
      description: port of communication
      format: int16
      readOnly: true
      type: integer
    MacAddress:
      description: "Mac address, E.g., de:ad:be:ef:12:34"
      type: string
    IPAddress:
      description: IP address
      type: string
    IPNetAddress:
      description: "IP address in CIDR notation, E.g., 192.168.0.1/24"
      type: string
    DnsConfig:
      description: DNS configuration
      properties:
        hostname:
          type: string
        domainname:
          type: string
        server:
          items:
            type: string
          type: array
        search:
          items:
            type: string
          type: array
      type: object
    DhcpConfig:
      description: DHCP configuration
      properties:
        enabled:
          type: boolean
        setting:
          type: string
      required:
      - enabled
      - setting
      type: object
    WinsConfig:
      description: WINS configuration
      properties:
        primary:
          type: string
        secondary:
          type: string
      required:
      - primary
      - secondary
      type: object
    RouteEntry:
      description: Routing entry
      properties:
        dest:
          description: IP address
          type: string
        prefix:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        nexthop:
          description: IP address
          type: string
        interface:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        type:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
        metric:
          default: 0
          description: Number of items
          format: int32
          readOnly: true
          type: integer
      required:
      - dest
      - interface
      - metric
      - prefix
      - type
      type: object
    DaemonState:
      enum:
      - "on"
      - "off"
      type: string
    MacToIPParameter:
      properties:
        IP:
          type: string
      required:
      - IP
    ErrorModel:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
    getIPAddress_200_response:
      properties:
        ip:
          description: Guest OS IP address
          type: string
      required:
      - ip
      type: object
    Portforward_guest:
      properties:
        ip:
          type: string
        port:
          default: 0
          description: port of communication
          format: int16
          readOnly: true
          type: integer
      required:
      - ip
      - port
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
